#!/usr/bin/env node

process.stdout.on('error', function( err ) {
  if (err.code === "EPIPE") {
    process.exit(0);
  }
});

const envcredstash = require('../index');
const _ = require('lodash');
const spawnSync = require('child_process').spawnSync;

const argv = require('yargs')
  .option('credstash-table', {
    describe: 'The credstash table.',
    default: 'credential-store'
  })
  .option('prefix', {
    describe: 'The credstash prefix for keys.',
    array: true,
    default: ['']
  })
  .option('region', {
    describe: 'The credstash region.'
  })
  .option('export', {
    describe: 'Export variables syntax.',
    boolean: true
  })
  .option('list', {
    describe: 'Export variables syntax.',
    boolean: true
  })
  .help()
  .argv;

envcredstash.get(argv, (err, env) => {
  if (err) {
    console.error(err.message);
    return process.exit(1);
  }

  if (argv.list) {
    return _.forEach(env, (value, key) => {
      console.log(key);
    });
  }

  if (argv.export) {
    return _.forEach(env, (value, key) => {
      console.log(`export ${key}=${JSON.stringify(value)}`);
    });
  }

  const childEnv = _.extend({}, process.env, env);

  spawnSync(argv['_'][0], argv['_'].slice(1), {
    env: childEnv,
    stdio: 'inherit'
  });
});
